//@version=5
// @author LazyBear
// modifications: MufasaOG
// List of all my indicators: https://www.tradingview.com/v/4IneGo8h/
//
indicator("ADX + Squeeze Momentum Indicator [LazyBear]", shorttitle = "SQZ + ADX", overlay=false)

length = input(20, title="BB Length")
mult = input(2.0,title="BB MultFactor")
lengthKC=input(20, title="KC Length")
multKC = input(1.5, title="KC MultFactor")

useTrueRange = input.bool(true, title="Use TrueRange (KC)")

// Calculate BB
source = close
basis = ta.sma(source, length)
dev = multKC * ta.stdev(source, length)
upperBB = basis + dev
lowerBB = basis - dev

// Calculate KC
ma = ta.sma(source, lengthKC)
trange = useTrueRange ? ta.tr : (high - low)
rangema = ta.sma(trange, lengthKC)
upperKC = ma + rangema * multKC
lowerKC = ma - rangema * multKC

sqzOn  = (lowerBB > lowerKC) and (upperBB < upperKC)
sqzOff = (lowerBB < lowerKC) and (upperBB > upperKC)
noSqz  = (sqzOn == false) and (sqzOff == false)

val = ta.linreg(source  -  math.avg(math.avg(ta.highest(high, lengthKC), ta.lowest(low, lengthKC)),ta.sma(close,lengthKC)), lengthKC,0) * 100

bcolor = val > 0? val > nz(val[1])? color.rgb(75, 165, 48): color.rgb(36, 85, 23): val < nz(val[1])? color.rgb(157, 33, 24) : color.rgb(80, 15, 13)
scolor = noSqz ? color.blue : sqzOn ? color.black : color.gray 
plot(val, color=bcolor, style=plot.style_area, linewidth=4)
plot(0, color=scolor, style=plot.style_cross, linewidth=2)
plot(val, color=bcolor, linewidth=4)


// Simplified rupture detection (example logic)
// isRupture = ta.change(histogram, 1) > 0.5

// Plot ruptures as markers
// plotshape(isRupture, style=shape.triangleup, location=location.abovebar, color=color.red, size=size.small)


// ADX

adxlen = input(14, title="ADX Smoothing")
dilen = input(14, title="DI Length")
keyLevel = if timeframe.period == "1"
    na,
else
    input(23, title="key level for ADX")
dirmov(len) =>
	up = ta.change(high) 
	down = -ta.change(low)
	truerange = ta.rma(ta.tr, len)
	plus = if timeframe.period == "1"
        na,
    else
        fixnan(100 * ta.rma(up > down and up > 0 ? up : 0, len) / truerange)
	minus = if timeframe.period == "1"
        na,
    else
        fixnan(100 * ta.rma(down > up and down > 0 ? down : 0, len) / truerange)
	[plus, minus]

adx(dilen, adxlen) => 
	[plus, minus] = dirmov(dilen)
	sum = if timeframe.period == "1"
        na,
    else
        plus + minus
	adx = if timeframe.period == "1"
        na,
    else
        100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
	[adx, plus, minus]

[sig, up, down] = adx(dilen, adxlen)

adxColor = sig > sig[1] ? color.lime: color.fuchsia

plot(sig, color=adxColor, title="ADX", linewidth=2)
// plot(up, color=color.lime, title="+DI")
// plot(down, color=color.red, title="-DI")
plot(keyLevel, color=color.white, title="Key Level")

// END SQUEEZE + ADX + DMI